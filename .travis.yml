
language: cpp

addons: 
  apt:
    sources:
    - ubuntu-toolchain-r-test # cmake requirement

    packages:
    - [cmake, cmake-data]
    - ccache
    - ninja-build
    - [g++-5, g++-6, g++-7, g++-8, g++-9]

matrix:
  include: 
    # Linux

    ## Clang
    - os: linux
      env: COMPILER=clang++ CMAKE_BUILD_TYPE=Release
      compiler: clang

    - os: linux
      env: COMPILER=clang++ CMAKE_BUILD_TYPE=Debug
      compiler: clang

    ## gcc
    - os: linux
      env: COMPILER=g++-5 CMAKE_BUILD_TYPE=Debug
      compiler: gcc

    - os: linux
      env: COMPILER=g++-5 CMAKE_BUILD_TYPE=Release
      compiler: gcc

    - os: linux
      env: COMPILER=g++-6 CMAKE_BUILD_TYPE=Debug
      compiler: gcc

    - os: linux
      env: COMPILER=g++-6 CMAKE_BUILD_TYPE=Release
      compiler: gcc

    - os: linux
      env: COMPILER=g++-7 CMAKE_BUILD_TYPE=Debug
      compiler: gcc

    - os: linux
      env: COMPILER=g++-7 CMAKE_BUILD_TYPE=Release
      compiler: gcc

    - os: linux
      env: COMPILER=g++-8 CMAKE_BUILD_TYPE=Debug
      compiler: gcc

    - os: linux
      env: COMPILER=g++-8 CMAKE_BUILD_TYPE=Release
      compiler: gcc

    - os: linux
      env: COMPILER=g++-9 CMAKE_BUILD_TYPE=Debug
      compiler: gcc

    - os: linux
      env: COMPILER=g++-9 CMAKE_BUILD_TYPE=Release
      compiler: gcc

    # Mac OSX
    - os: osx
      osx_image: xcode7.3
      compiler: clang
      env: CMAKE_BUILD_TYPE=Debug

    - os: osx
      osx_image: xcode7.3
      compiler: clang
      env: CMAKE_BUILD_TYPE=Release

cache:
  directories:
    - $HOME/.ccache

before_install:
- |
    case `uname` in 
        Darwin)     export OS_NAME="osx"    ;;
        Linux)      export OS_NAME="linux"  ;;
    esac

    if [[ ${OS_NAME} == osx ]]; then
        brew update
        brew install ninja
    fi

- |
    if [[ ${OS_NAME} == linux ]]; then
        case ${COMPILER} in
            clang*)
                export CC=$(echo ${COMPILER} | sed 's/\+//g')
                export CXX=${COMPILER}
            ;;

            g++-*)
                export CC=$(echo ${COMPILER} | sed 's/\+/c/g')
                export CXX=${COMPILER} 
            ;;

            *) echo "Invalid compiler version" ; exit 2 ;;
        esac
    fi

script:

- |
  cmake --version
  ninja --version 

  echo "CC=${CC}"
  $CC --version
  echo "CXX=${CXX}"
  $CXX --version

- mkdir build; cd build
- |
    cmake -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
          -G"Ninja" \
          ..

- cmake --build . --target check

notifications:
  email: false
